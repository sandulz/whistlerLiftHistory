<!DOCTYPE html>
<html>
<head>
  <title>Whistler Blackcomb - Weekly Lift Status</title>
  <link href="https://fonts.googleapis.com/css2?family=Prompt:wght@400;600&display=swap" rel="stylesheet">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
  <style>
    body {
      font-family: 'Prompt', sans-serif;
      margin: 20px;
      background-color: #f5f5f5;
    }
    
    .container {
      max-width: 100%;
      padding: 10px;
      margin: 0 auto;
      background-color: white;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    @media (min-width: 1200px) {
      .container {
        max-width: 1200px;
        padding: 20px;
      }
    }

    h1 {
      color: #1a1a1a;
      margin: 0;  /* Remove margin */
      font-size: clamp(0.8rem, 2vw, 1rem);  /* Match other text size */
      font-weight: bold;
      display: inline;  /* Make it inline */
    }

    .header-row {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }

    .last-updated {
      text-align: right;
      color: #666;
      font-style: italic;
      font-size: clamp(0.8rem, 2vw, 1rem);
      margin: 0;  /* Remove margin */
    }

    .table-wrapper {
      width: 100%;
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
      margin-bottom: 1rem;
      position: relative;
    }

    table {
      border-collapse: collapse;
      width: 100%;
      margin-top: 20px;
      background-color: white;
      min-width: 800px;
    }

    th, td {
      border: 1px solid #ddd;
      padding: clamp(4.3px, 0.87vw, 10.1px) clamp(4px, 1vw, 8px);
      text-align: left;
      font-size: clamp(0.8rem, 2vw, 1rem);
      white-space: nowrap;
      line-height: 1.2;
    }

    td:first-child {
      position: sticky;
      left: 0;
      background-color: white;
      z-index: 1;
      border-right: 2px solid #ddd;
    }

    .mountain-section td:first-child {
      background-color: #f2f2f2;
    }

    th {
      background-color: #003366;
      color: white;
      position: sticky;
      top: 0;
      z-index: 2;
    }

    th:first-child {
      left: 0;
      z-index: 3;
    }

    .status-open {
      background-color: #5dd25d;  /* Light green background */
      color: black;
    }

    .status-closed {
      background-color: #e46767;  /* Light red background */
      color: black;
    }

    /* Add style for cells with no data */
    .status-no-data {
      background-color: white;
      color: black;
    }

    .mountain-section {
      background-color: #f2f2f2;
      font-weight: bold;
    }

    th:last-child, td:last-child {
      border-left: 2px solid #000;
      background-color: #f0f0f0;
      text-align: center;
    }

    .mountain-section td:last-child {
      border-left: 1px solid #ddd;
      background-color: #f2f2f2;
      text-align: left;
    }

    th:last-child {
      background-color: #002855;
      border-left: 2px solid #000;
      text-align: center;
    }

    tr:nth-child(even) td:last-child {
      background-color: #e8e8e8;
    }

    /* Modify the last column styles */
    td:last-child.status-open {
      background-color: #f0f0f0;  /* Restore original background */
      color: black;  /* Change to black */
      font-weight: bold;
    }

    td:last-child.status-closed {
      background-color: #f0f0f0;  /* Restore original background */
      color: black;  /* Change to black */
      font-weight: bold;
    }

    td:last-child.status-no-data {
      background-color: #f0f0f0;  /* Restore original background */
      color: black;
      font-weight: bold;
    }

    /* Keep the alternating row background for last column */
    tr:nth-child(even) td:last-child.status-open,
    tr:nth-child(even) td:last-child.status-closed,
    tr:nth-child(even) td:last-child.status-no-data {
      background-color: #e8e8e8;
    }

    /* Update last column text color */
    td:last-child {
      color: black;
    }

    /* Icon styles */
    .status-icon {
      margin-right: 6px;
    }

    .icon-open {
      color: rgb(81, 200, 123);
    }

    .icon-closed {
      color: rgb(255, 74, 74);
    }

    .icon-hold {
      color: rgb(252, 179, 21);
    }

    .icon-scheduled {
      color: rgb(255, 163, 107);
    }

    .snowfall-row {
      background-color: #f8f9fa;
      font-weight: bold;
    }

    .snowfall-cell {
      text-align: center;
    }

    .opening-time {
      display: block;
      font-size: 0.8em;
      color: #444;
      margin-top: 2px;
      text-align: center;
    }

    /* Center align all date columns */
    td:not(:first-child):not(:last-child),
    th:not(:first-child):not(:last-child) {
      text-align: center;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header-row">
      <h1>Whistler Blackcomb Weekly Lift Status</h1>
      <div class="last-updated">
        Last updated: <%= new Date().toLocaleString() %>
      </div>
    </div>
    
    <div class="table-wrapper">
      <table>
        <thead>
          <tr>
            <th>Lift Name</th>
            <% 
              // Generate the last 7 days of dates in reverse order (oldest to newest)
              const dates = [...Array(7)].map((_, i) => {
                const date = new Date();
                date.setDate(date.getDate() - (6 - i));
                return date;
              });
            %>
            <% dates.forEach(date => { %>
              <th><%= date.toLocaleDateString('en-US', { 
                weekday: 'short', 
                month: 'short', 
                day: 'numeric' 
              }) %></th>
            <% }); %>
            <th>Current Status</th>
          </tr>
        </thead>
        <tbody>
          <!-- Add snowfall row -->
          <tr class="snowfall-row">
            <td><i class="fa-solid fa-snowflake"></i> 24hr Snowfall <i class="fa-solid fa-snowflake"></i></td>
            <% dates.forEach(date => { %>
              <% 
                const dateStr = date.toISOString().split('T')[0];
                // Find snowfall entry with exact date match
                const snowfall = weeklySnowfall.find(s => {
                  const snowfallDate = new Date(s.date).toISOString().split('T')[0];
                  return snowfallDate === dateStr;
                });
              %>
              <td class="snowfall-cell">
                <%= snowfall ? `${snowfall.snowfall_cm}cm` : 'No Data' %>
              </td>
            <% }); %>
            <td></td>
          </tr>
          <% Object.entries(liftStructure).forEach(([mountain, lifts]) => { %>
            <tr class="mountain-section">
              <td colspan="9"><%= mountain %></td>
            </tr>
            <% lifts.forEach(liftName => { %>
              <tr>
                <td><%= liftName %></td>
                <% dates.forEach(date => { %>
                  <% 
                    const dateStr = date.toISOString().split('T')[0];
                    const status = weeklyStatus.find(s => 
                      s.lift_name === liftName && 
                      s.date === dateStr
                    );
                    let statusClass = 'status-no-data';
                    if (status) {
                      statusClass = status.status === 'Opened' ? 'status-open' : 'status-closed';
                    }
                  %>
                  <td class="<%= statusClass %>">
                    <%= status ? status.status : 'No Data' %>
                    <% if (status && status.status === 'Opened' && status.first_open_time) { %>
                      <span class="opening-time"><%= status.first_open_time %></span>
                    <% } %>
                  </td>
                <% }); %>
                <% 
                  const currentStatus = weeklyStatus.find(s => 
                    s.lift_name === liftName && 
                    s.date === new Date().toISOString().split('T')[0]
                  );
                  let currentStatusClass = 'status-no-data';
                  if (currentStatus) {
                    currentStatusClass = currentStatus.current_status.toLowerCase() === 'open' ? 
                      'status-open' : 'status-closed';
                  }
                %>
                <td class="<%= currentStatusClass %>">
                  <% if (currentStatus) { %>
                    <% if (currentStatus.current_status === 'Open') { %>
                      <i class="fa-solid fa-circle-check status-icon icon-open"></i>
                    <% } else if (currentStatus.current_status === 'Closed') { %>
                      <i class="fa-solid fa-circle-xmark status-icon icon-closed"></i>
                    <% } else if (currentStatus.current_status === 'On Hold') { %>
                      <i class="fa-solid fa-circle-pause status-icon icon-hold"></i>
                    <% } else if (currentStatus.current_status === 'Scheduled') { %>
                      <i class="fa-solid fa-clock status-icon icon-scheduled"></i>
                    <% } %>
                  <% } %>
                  <%= currentStatus ? currentStatus.current_status : 'No Data' %>
                </td>
              </tr>
            <% }); %>
          <% }); %>
        </tbody>
      </table>
    </div>
  </div>
</body>
</html> 